library(gapminder)

str(gapminder)

library(tidyverse)
library(forcats)
class(gapminder)
gapminder
class(iris)
as.tibble(iris)      
summary(gapminder)
plot(lifeExp ~ year, gapminder)
plot(lifeExp ~ gdpPercap, gapminder)

str(gapminder$continent)
levels(gapminder$continent)
nlevels(gapminder$continent)
class(gapminder$continent)

gapminder %>%
  count(continent)

fct_count(gapminder$continent)

barplot(table(gapminder$continent))

p <- ggplot(filter(gapminder, continent != "Oceania"),
            aes(x= gdpPercap, y = lifeExp))
p <- p + scale_x_log10()
p + geom_point()
p + geom_point(aes(color = continent))

## http://stat545.com/block009_dplyr-intro.html
class(gapminder)
as_tibble(iris)

filter(gapminder, lifeExp < 29)

filter(gapminder, country == 'New Zealand', year >1979)

filter(gapminder, country %in% c('Rwanda', 'Afghanistan'))

gapminder %>% head(3)

select(gapminder, year, lifeExp)

gapminder %>% 
  select(year, lifeExp) %>% 
  head(4)

gapminder %>% 
  filter(country == 'Cambodia') %>% 
  select(year, lifeExp)

(my_gap <- gapminder)

my_gap %>% filter(country == "Panama")

my_precious <- my_gap %>%  filter(country == 'Canada')

my_gap %>% 
  mutate(gdp = pop*gdpPercap)

ctib <- my_gap %>% 
  filter(country == 'Canada')

my_gap <- my_gap %>% 
  mutate(tmp = rep(ctib$gdpPercap, nlevels(country)),
         gdpPercapRel = gdpPercap / tmp,
         tmp = NULL)

my_gap %>% head()

my_gap %>% 
  filter(country == 'Canada') %>% 
  select(country, year, gdpPercapRel)

summary(my_gap$gdpPercapRel)

my_gap %>% arrange(year, country)

my_gap %>%  filter(year == 2007) %>% 
  arrange(desc(lifeExp))

my_gap %>% 
  rename(life_exp = lifeExp,
         gdp_percap = gdpPercap,
         gdp_percap_rel = gdpPercapRel)

my_gap %>% 
  filter(country == "Burundi", year > 1996) %>% 
  select(yr = year, lifeExp, gdpPercap) %>% 
  select(gdpPercap, everything())

#http://stat545.com/block010_dplyr-end-single-table.html#group_by-is-a-mighty-weapon
my_gap %>% 
  group_by(continent) %>% 
  summarize(n =n())

my_gap %>% 
  group_by(continent) %>% 
  tally()

my_gap %>% 
  count(continent)

my_gap %>% 
  group_by(continent) %>% 
  summarise(n = n(),
            n_countires = n_distinct(country))

my_gap %>% 
  group_by(continent) %>% 
  summarize(avg_life_exp = mean(lifeExp))

my_gap %>% 
  filter(year %in% c(1952, 2007)) %>% 
  group_by(continent, year) %>% 
  summarise_each(funs(mean, median), lifeExp, gdpPercap)

my_gap %>% 
  filter(continent == "Asia") %>% 
  group_by(year) %>% 
  summarize(min_lifeExp = min(lifeExp), max_lifeExp = max(lifeExp) )


my_gap %>% 
  filter(continent == "Americas") %>% 
  group_by(year) %>% 
  summarise(min_lifeExp = min(lifeExp), max_lifeExp = max(lifeExp))


my_gap %>% 
  group_by(country) %>%
  select(country, year, lifeExp) %>%
  mutate(lifeExp_gain = lifeExp - first(lifeExp)) %>% 
  filter(year < 1963)
  
my_gap %>% 
  filter(continent == "Asia") %>% 
  select(year, country, lifeExp) %>% 
  group_by(year) %>% # group by year so min_ranks works accross years
  filter(min_rank(desc(lifeExp)) < 2 | min_rank(lifeExp) < 2) %>% 
  arrange(year) %>% 
  print(n = Inf)

asia <- my_gap %>% 
  filter(continent == "Asia") %>% 
  select(year, country, lifeExp)  %>% 
  group_by(year)
asia

asia %>% 
  mutate(le_rank = min_rank(lifeExp),
         le_desc_rank = min_rank(desc(lifeExp))) %>% 
  filter(country %in% c("Afghanistan", "Japan", "Thailand"), year > 1995)

my_gap %>% 
  group_by(continent, country) %>% 
  ## within each country take (lifeExp in year i) - (lifeExp in year i - 1)
  ## positive means lifeExp went up, negative means it went down.
  mutate(le_delta = lifeExp - lag(lifeExp)) %>% 
  #keep the worse more negative le change for each country
  summarise(worst_le_delta = min(le_delta, na.rm = TRUE)) %>% 
  ## do the same for continent
  top_n(-1, wt = worst_le_delta) %>% 
  arrange(worst_le_delta)

## ggplot2
library(tibble)
library(ggplot2)

library(gapminder)  
gapminder

ggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) +
  geom_point()

p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp))

p + geom_point()

ggplot(gapminder, aes(x = log10(gdpPercap), y = lifeExp)) +
  geom_point()

p + geom_point() + scale_x_log10()

p <- p + scale_x_log10()

p + geom_point(aes(color = continent))

plot(gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) +
  geom_point() + scale_x_log10()

p + geom_point(alpha = (1/3), size = 3)


p + geom_point() + geom_smooth()

p + geom_point() + geom_smooth(lwd = 3, se = FALSE, method = 'lm')

p + aes(color = continent) + geom_point() +
  geom_smooth(lwd = 2, se = FALSE)

#only show oceanic countries
my_gap %>% 
  filter(continent == "Oceania") %>% 
  group_by(country) %>% 
  summarise()

p + geom_point(alpha = (1/3), size = 3) +
  facet_wrap(~ continent) +
  geom_smooth(lwd = 2, se = FALSE)

ggplot(gapminder, aes(x = year, y = lifeExp,
                      color = continent)) +
  geom_jitter(alpha = (1/3), size = 3)

ggplot(gapminder, aes(x=year, y=lifeExp,
                      color = continent)) +
  geom_jitter(alpha=(1/3), size = 3)+
  facet_wrap(~ continent)

ggplot(subset(gapminder, continent != 'Oceania'),
       aes(x = year, y = lifeExp, group = country, color = country)) +
  geom_line(lwd = 1, show_guide = FALSE) + facet_wrap(~ continent)  +
  scale_color_manual(values = country_colors) +
  theme_bw() + theme(strip.text = element_text(size = rel(1.1)))

ggplot(gapminder, aes(x = year, y = lifeExp,
                      color = continent)) +
  facet_wrap(~ continent) +
  geom_jitter(alpha =(1/3), size =3)+
  scale_color_manual(values = continent_colors)+
  geom_smooth(lwd = 2)

jc = "Cambodia"
gapminder %>% 
  filter(country == jc) %>% 
  ggplot(aes(x = year, y = lifeExp)) +
  labs(title = jc) +
  geom_line()

rwanda <- gapminder %>% 
  filter(country == "Rwanda")

p <- ggplot(rwanda, aes(x = year, y = lifeExp)) +
  labs(title = "Rwanda") +
  geom_line()

print(p)
ggsave("rwanda.pdf", plot = p)

(y <- ggplot(gapminder, aes(x= year, y = lifeExp)) + geom_point())

y + facet_wrap(~ continent)

y + geom_smooth(se = FALSE, lwd = 2) +
  geom_smooth(se = FALSE, method = "lm", color = "orange", lwd =2)

y + geom_smooth(se = FALSE, lwd = 2) +
  facet_wrap(~ continent)

y + facet_wrap(~ continent) +
  geom_line(aes(group = country))

ggplot(subset(gapminder, country == 'Zimbabwe'),
       aes(x = year, y = lifeExp)) +
  geom_line() + geom_point()

jCountries <- c('Canada', "Cambodia", "Rwanda", "Mexico")
ggplot(subset(gapminder, country %in% jCountries),
              aes(x = year, y = lifeExp, color = reorder(country, -1 * lifeExp, max)))+
         geom_line() + geom_point()

ggplot(gapminder, aes(x = gdpPercap, y= lifeExp)) +
  scale_x_log10() + geom_bin2d()

library(ggplot2)
library(viridis)
ggplot(data.frame(x = rnorm(10000), y = rnorm(10000)), aes(x = x, y = y)) +
  geom_hex() + coord_fixed() +
  scale_fill_viridis() + theme_bw()

# Stripplots
ggplot(gapminder, aes(x = continent, y = lifeExp)) + geom_point()

ggplot(gapminder, aes(x= continent, y = lifeExp))+ 
  geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4)


ggplot(gapminder, aes(x=continent, y = lifeExp)) + 
  geom_boxplot(outlier.colour = "hotpink") +
  geom_jitter(position = position_jitter(width = .1, height = 0), alpha =1/4)


ggplot(gapminder, aes(x=continent, y = lifeExp)) +
  geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4) +
  stat_summary(fun.y = median, colour = 'red', geom = "point", size=5)

# order the continent factor based on lifeexp
ggplot(gapminder, aes(reorder(x = continent, lifeExp), y = lifeExp)) +
  geom_jitter(position = position_jitter(width = 0.1), alpha=1/4) +
  stat_summary(fun.y = median, colour ='red', geom='point', size=5)
  
ggplot(gapminder, aes(x=lifeExp , fill = continent)) +
  geom_histogram(binwidth =1)

ggplot(gapminder, aes(x = lifeExp, fill = continent)) +
  geom_histogram(position = "identity")

ggplot(gapminder, aes(x=lifeExp, colour= continent)) +
  geom_freqpoly()

ggplot(gapminder, aes(x = lifeExp, fill = continent)) + 
  geom_density(alpha = 0.2)

ggplot(subset(gapminder, continent != 'Oceania'),
       aes(x = lifeExp, fill = continent)) +
  geom_density(alpha=0.2)

ggplot(gapminder, aes(x=lifeExp)) +
  geom_density() + facet_grid(continent ~.)

ggplot(subset(gapminder, continent != 'Oceania'),
       aes(x = lifeExp, fill = continent)) +
  geom_histogram()+
  facet_grid(continent ~.)

ggplot(gapminder, aes(x = year, y = lifeExp)) +
  geom_boxplot(aes(group = year))

ggplot(gapminder, aes(x = year, y = lifeExp)) +
  geom_violin(aes(group=year)) +
  geom_jitter(alpha = 1/4) +
  geom_smooth(se = FALSE)

#bars
table(gapminder$continent)

ggplot(gapminder, aes(x = continent)) + geom_bar()

p <- ggplot(gapminder, aes(x = reorder(continent, continent, length)))
p + geom_bar()

p+geom_bar() + coord_flip()

p + geom_bar(width = 0.05) + coord_flip()

(continent_feq <- gapminder %>% count(continent))

ggplot(continent_feq, aes(x=continent, y = n)) + geom_bar(stat = 'identity')
 
####### Statistical Modelling https://stat545.com/cm008-notes_and_exercises.html

ggplot(gapminder, aes(gdpPercap, lifeExp)) +
  geom_point() + 
  geom_smooth(method='lm') +
  scale_x_log10()
  
fit1 <- lm(lifeExp ~ log(gdpPercap), data=gapminder)
fit1
typeof(fit1)

fit1_small <-lm(lifeExp ~ log(gdpPercap), data=head(gapminder))
lapply(fit1_small,identity)

predict(fit1) %>%  head

qplot(log(gapminder$gdpPercap), predict(fit1))

ggplot(gapminder, aes(gdpPercap, lifeExp)) +
  geom_point(alpha=0.1) +
  geom_point(y=predict(fit1),colour='red') +
  scale_x_log10()

# predict using new data
(my_newdata <- data.frame(gdpPercap=c(100, 547, 289)))
predict(fit1, newdata=my_newdata)

predict(fit1, newdata=filter(gapminder, country=="Canada"))

fit1$coefficients

coef(fit1)
fit1$residuals %>%  head

resid(fit1) %>%  head

qplot(log(gapminder$gdpPercap), resid(fit1)) +
  geom_hline(yintercept = 0,
             linetype = "dashed")

(summ_fit1 <- summary(fit1))
summ_fit1_small <-summary(fit1_small)
lapply(summ_fit1_small, identity)

gapminder %>% 
  group_by(continent) %>% 
  summarise(mean_gdpPercap = mean(gdpPercap),
            n_countries = length(gdpPercap))

gapminder %>% 
  group_by(country) %>% 
  mutate(pop_growth = pop - pop[1])

# themes
p1 <- ggplot(gapminder, aes(gdpPercap, lifeExp)) +
  facet_wrap(~ continent) +
  geom_point(colour="#386CB0", alpha=0.2) +
  scale_x_log10()
p1 + theme_bw()

p1 + scale_y_continuous("Life Expectancy")

p1 + labs(x="GDP per capita",
          y="Life expec",
          title='Some Stuff')

ggplot(gapminder, aes(gdpPercap, lifeExp)) +
  geom_point(aes(colour=continent),
             alpha=0.2) +
  scale_colour_discrete("Continents of\n the World")

p1 + scale_x_log10(breaks=c((1:10)*1000,
                   (1:10)*10000))

p2 <- ggplot(gapminder, aes(gdpPercap, lifeExp)) +
  geom_point(aes(colour=pop/10^9),
             alpha=0.2)

p2 + scale_color_continuous("Populations \nin billions")

p2 + scale_color_continuous("Population \nin billions",
                            breaks=seq(0,2,by=0.2))
